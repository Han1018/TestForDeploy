{"version":3,"sources":["can-script.js"],"names":["products","fetch","then","response","ok","json","initialize","console","log","status","statusText","category","document","querySelector","searchTerm","searchBtn","main","lastCategory","value","lastSearch","categoryGroup","finalGroup","updateDisplay","onclick","selectCategory","e","preventDefault","trim","selectProducts","lowerCaseType","toLowerCase","i","length","type","push","lowerCaseSearchTerm","name","indexOf","firstChild","removeChild","para","createElement","textContent","appendChild","fetchBlob","product","url","image","blob","objectURL","URL","createObjectURL","showProduct","section","heading","setAttribute","replace","charAt","toUpperCase","price","toFixed","src","alt","onload","window","revokeObjectURL"],"mappings":"AAAA;AACA,IAAIA,QAAJ,EAEA;AACA;AACA;;AACAC,KAAK,CAAC,eAAD,CAAL,CAAuBC,IAAvB,CAA4B,UAAUC,QAAV,EAAoB;AAC9C,MAAIA,QAAQ,CAACC,EAAb,EAAiB;AACfD,IAAAA,QAAQ,CAACE,IAAT,GAAgBH,IAAhB,CAAqB,UAAUG,IAAV,EAAgB;AACnCL,MAAAA,QAAQ,GAAGK,IAAX;AACAC,MAAAA,UAAU;AACX,KAHD;AAID,GALD,MAKO;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,4DAA4DL,QAAQ,CAACM,MAArE,GAA8E,IAA9E,GAAqFN,QAAQ,CAACO,UAA1G;AACD;AACF,CATD,GAWA;;AACA,SAASJ,UAAT,GAAsB;AACpB;AACA,MAAIK,QAAQ,GAAGC,QAAQ,CAACC,aAAT,CAAuB,WAAvB,CAAf;AACA,MAAIC,UAAU,GAAGF,QAAQ,CAACC,aAAT,CAAuB,aAAvB,CAAjB;AACA,MAAIE,SAAS,GAAGH,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAhB;AACA,MAAIG,IAAI,GAAGJ,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAX,CALoB,CAOpB;;AACA,MAAII,YAAY,GAAGN,QAAQ,CAACO,KAA5B,CARoB,CASpB;;AACA,MAAIC,UAAU,GAAG,EAAjB,CAVoB,CAYpB;AACA;AACA;AACA;;AACA,MAAIC,aAAJ;AACA,MAAIC,UAAJ,CAjBoB,CAmBpB;AACA;;AACAA,EAAAA,UAAU,GAAGrB,QAAb;AACAsB,EAAAA,aAAa,GAtBO,CAwBpB;;AACAF,EAAAA,aAAa,GAAG,EAAhB;AACAC,EAAAA,UAAU,GAAG,EAAb,CA1BoB,CA4BpB;AACA;;AACAN,EAAAA,SAAS,CAACQ,OAAV,GAAoBC,cAApB;;AAEA,WAASA,cAAT,CAAwBC,CAAxB,EAA2B;AACzB;AACA;AACAA,IAAAA,CAAC,CAACC,cAAF,GAHyB,CAKzB;;AACAN,IAAAA,aAAa,GAAG,EAAhB;AACAC,IAAAA,UAAU,GAAG,EAAb,CAPyB,CASzB;AACA;AACA;;AACA,QAAIV,QAAQ,CAACO,KAAT,KAAmBD,YAAnB,IAAmCH,UAAU,CAACI,KAAX,CAAiBS,IAAjB,OAA4BR,UAAnE,EAA+E;AAC7E;AACD,KAFD,MAEO;AACL;AACAF,MAAAA,YAAY,GAAGN,QAAQ,CAACO,KAAxB;AACAC,MAAAA,UAAU,GAAGL,UAAU,CAACI,KAAX,CAAiBS,IAAjB,EAAb,CAHK,CAIL;AACA;;AACA,UAAIhB,QAAQ,CAACO,KAAT,KAAmB,KAAvB,EAA8B;AAC5BE,QAAAA,aAAa,GAAGpB,QAAhB;AACA4B,QAAAA,cAAc,GAFc,CAG5B;AACA;AACA;AACD,OAND,MAMO;AACL;AACA;AACA;AACA,YAAIC,aAAa,GAAGlB,QAAQ,CAACO,KAAT,CAAeY,WAAf,EAApB;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG/B,QAAQ,CAACgC,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACxC;AACA;AACA,cAAI/B,QAAQ,CAAC+B,CAAD,CAAR,CAAYE,IAAZ,KAAqBJ,aAAzB,EAAwC;AACtCT,YAAAA,aAAa,CAACc,IAAd,CAAmBlC,QAAQ,CAAC+B,CAAD,CAA3B;AACD;AACF,SAXI,CAaL;;;AACAH,QAAAA,cAAc;AACf;AACF;AACF,GA3EmB,CA6EpB;AACA;;;AACA,WAASA,cAAT,GAA0B;AACxB;AACA;AACA,QAAId,UAAU,CAACI,KAAX,CAAiBS,IAAjB,OAA4B,EAAhC,EAAoC;AAClCN,MAAAA,UAAU,GAAGD,aAAb;AACAE,MAAAA,aAAa;AACd,KAHD,MAGO;AACL;AACA;AACA,UAAIa,mBAAmB,GAAGrB,UAAU,CAACI,KAAX,CAAiBS,IAAjB,GAAwBG,WAAxB,EAA1B,CAHK,CAIL;AACA;AACA;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,aAAa,CAACY,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC7C,YAAIX,aAAa,CAACW,CAAD,CAAb,CAAiBK,IAAjB,CAAsBC,OAAtB,CAA8BF,mBAA9B,MAAuD,CAAC,CAA5D,EAA+D;AAC7Dd,UAAAA,UAAU,CAACa,IAAX,CAAgBd,aAAa,CAACW,CAAD,CAA7B;AACD;AACF,OAXI,CAaL;;;AACAT,MAAAA,aAAa;AACd;AAEF,GAtGmB,CAwGpB;;;AACA,WAASA,aAAT,GAAyB;AACvB;AACA,WAAON,IAAI,CAACsB,UAAZ,EAAwB;AACtBtB,MAAAA,IAAI,CAACuB,WAAL,CAAiBvB,IAAI,CAACsB,UAAtB;AACD,KAJsB,CAMvB;;;AACA,QAAIjB,UAAU,CAACW,MAAX,KAAsB,CAA1B,EAA6B;AAC3B,UAAIQ,IAAI,GAAG5B,QAAQ,CAAC6B,aAAT,CAAuB,GAAvB,CAAX;AACAD,MAAAA,IAAI,CAACE,WAAL,GAAmB,wBAAnB;AACA1B,MAAAA,IAAI,CAAC2B,WAAL,CAAiBH,IAAjB,EAH2B,CAI3B;AACD,KALD,MAKO;AACL,WAAK,IAAIT,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,UAAU,CAACW,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AAC1Ca,QAAAA,SAAS,CAACvB,UAAU,CAACU,CAAD,CAAX,CAAT;AACD;AACF;AACF,GA1HmB,CA4HpB;AACA;AACA;;;AACA,WAASa,SAAT,CAAmBC,OAAnB,EAA4B;AAC1B;AACA,QAAIC,GAAG,GAAG,YAAYD,OAAO,CAACE,KAA9B;AACAxC,IAAAA,OAAO,CAACC,GAAR,CAAYsC,GAAZ,EAH0B,CAI1B;AACA;;AACA7C,IAAAA,KAAK,CAAC6C,GAAD,CAAL,CAAW5C,IAAX,CAAgB,UAAUC,QAAV,EAAoB;AAClC,UAAIA,QAAQ,CAACC,EAAb,EAAiB;AACfD,QAAAA,QAAQ,CAAC6C,IAAT,GAAgB9C,IAAhB,CAAqB,UAAU8C,IAAV,EAAgB;AACnC;AACA;AACA,cAAIC,SAAS,GAAGC,GAAG,CAACC,eAAJ,CAAoBH,IAApB,CAAhB;AACAzC,UAAAA,OAAO,CAACC,GAAR,CAAYyC,SAAZ,EAJmC,CAKnC;;AACAG,UAAAA,WAAW,CAACH,SAAD,EAAYJ,OAAZ,CAAX;AACD,SAPD;AAQD,OATD,MASO;AACLtC,QAAAA,OAAO,CAACC,GAAR,CAAY,0BAA0BqC,OAAO,CAACT,IAAlC,GAAyC,+BAAzC,GAA2EjC,QAAQ,CAACM,MAApF,GAA6F,IAA7F,GAAoGN,QAAQ,CAACO,UAAzH;AACD;AACF,KAbD;AAcD,GAnJmB,CAqJpB;;;AACA,WAAS0C,WAAT,CAAqBH,SAArB,EAAgCJ,OAAhC,EAAyC;AACvC;AACA,QAAIQ,OAAO,GAAGzC,QAAQ,CAAC6B,aAAT,CAAuB,SAAvB,CAAd;AACA,QAAIa,OAAO,GAAG1C,QAAQ,CAAC6B,aAAT,CAAuB,IAAvB,CAAd;AACA,QAAID,IAAI,GAAG5B,QAAQ,CAAC6B,aAAT,CAAuB,GAAvB,CAAX;AACA,QAAIM,KAAK,GAAGnC,QAAQ,CAAC6B,aAAT,CAAuB,KAAvB,CAAZ,CALuC,CAOvC;;AACAY,IAAAA,OAAO,CAACE,YAAR,CAAqB,OAArB,EAA8BV,OAAO,CAACZ,IAAtC,EARuC,CAUvC;AACA;;AACAqB,IAAAA,OAAO,CAACZ,WAAR,GAAsBG,OAAO,CAACT,IAAR,CAAaoB,OAAb,CAAqBX,OAAO,CAACT,IAAR,CAAaqB,MAAb,CAAoB,CAApB,CAArB,EAA6CZ,OAAO,CAACT,IAAR,CAAaqB,MAAb,CAAoB,CAApB,EAAuBC,WAAvB,EAA7C,CAAtB,CAZuC,CAcvC;AACA;AACA;;AACAlB,IAAAA,IAAI,CAACE,WAAL,GAAmB,MAAMG,OAAO,CAACc,KAAR,CAAcC,OAAd,CAAsB,CAAtB,CAAzB,CAjBuC,CAmBvC;;AACAb,IAAAA,KAAK,CAACc,GAAN,GAAYZ,SAAZ;AAEAF,IAAAA,KAAK,CAACe,GAAN,GAAYjB,OAAO,CAACT,IAApB;;AACA,QAAI;AAEFW,MAAAA,KAAK,CAACgB,MAAN,GAAe,YAAY;AACzBC,QAAAA,MAAM,CAACd,GAAP,CAAWe,eAAX,CAA2BlB,KAAK,CAACc,GAAjC;AACAtD,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD,OAHD;AAID,KAND,CAOA,OAAOiB,CAAP,EAAU;AACRlB,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBiB,CAArB;AACD,KAhCsC,CAiCvC;;;AACAT,IAAAA,IAAI,CAAC2B,WAAL,CAAiBU,OAAjB;AAEAA,IAAAA,OAAO,CAACV,WAAR,CAAoBW,OAApB;AACAD,IAAAA,OAAO,CAACV,WAAR,CAAoBH,IAApB;AACAa,IAAAA,OAAO,CAACV,WAAR,CAAoBI,KAApB;AACAxC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AAGD;AACF","file":"can-script.2d4973ed.js","sourceRoot":"..","sourcesContent":["// create a variable to store the products 'database' in\nvar products;\n\n// use fetch to retrieve it, and report any errors that occur in the fetch operation\n// once the products have been successfully loaded and formatted as a JSON object\n// using response.json(), run the initialize() function\nfetch('products.json').then(function (response) {\n  if (response.ok) {\n    response.json().then(function (json) {\n      products = json;\n      initialize();\n    });\n  } else {\n    console.log('Network request for products.json failed with response ' + response.status + ': ' + response.statusText);\n  }\n});\n\n// sets up the app logic, declares required variables, contains all the other functions\nfunction initialize() {\n  // grab the UI elements that we need to manipulate\n  var category = document.querySelector('#category');\n  var searchTerm = document.querySelector('#searchTerm');\n  var searchBtn = document.querySelector('button');\n  var main = document.querySelector('main');\n\n  // keep a record of what the last category and search term entered were\n  var lastCategory = category.value;\n  // no search has been made yet\n  var lastSearch = '';\n\n  // these contain the results of filtering by category, and search term\n  // finalGroup will contain the products that need to be displayed after\n  // the searching has been done. Each will be an array containing objects.\n  // Each object will represent a product\n  var categoryGroup;\n  var finalGroup;\n\n  // To start with, set finalGroup to equal the entire products database\n  // then run updateDisplay(), so ALL products are displayed initially.\n  finalGroup = products;\n  updateDisplay();\n\n  // Set both to equal an empty array, in time for searches to be run\n  categoryGroup = [];\n  finalGroup = [];\n\n  // when the search button is clicked, invoke selectCategory() to start\n  // a search running to select the category of products we want to display\n  searchBtn.onclick = selectCategory;\n\n  function selectCategory(e) {\n    // Use preventDefault() to stop the form submitting — that would ruin\n    // the experience\n    e.preventDefault();\n\n    // Set these back to empty arrays, to clear out the previous search\n    categoryGroup = [];\n    finalGroup = [];\n\n    // if the category and search term are the same as they were the last time a\n    // search was run, the results will be the same, so there is no point running\n    // it again — just return out of the function\n    if (category.value === lastCategory && searchTerm.value.trim() === lastSearch) {\n      return;\n    } else {\n      // update the record of last category and search term\n      lastCategory = category.value;\n      lastSearch = searchTerm.value.trim();\n      // In this case we want to select all products, then filter them by the search\n      // term, so we just set categoryGroup to the entire JSON object, then run selectProducts()\n      if (category.value === 'All') {\n        categoryGroup = products;\n        selectProducts();\n        // If a specific category is chosen, we need to filter out the products not in that\n        // category, then put the remaining products inside categoryGroup, before running\n        // selectProducts()\n      } else {\n        // the values in the <option> elements are uppercase, whereas the categories\n        // store in the JSON (under \"type\") are lowercase. We therefore need to convert\n        // to lower case before we do a comparison\n        var lowerCaseType = category.value.toLowerCase();\n        for (var i = 0; i < products.length; i++) {\n          // If a product's type property is the same as the chosen category, we want to\n          // dispay it, so we push it onto the categoryGroup array\n          if (products[i].type === lowerCaseType) {\n            categoryGroup.push(products[i]);\n          }\n        }\n\n        // Run selectProducts() after the filtering has bene done\n        selectProducts();\n      }\n    }\n  }\n\n  // selectProducts() Takes the group of products selected by selectCategory(), and further\n  // filters them by the tnered search term (if one has bene entered)\n  function selectProducts() {\n    // If no search term has been entered, just make the finalGroup array equal to the categoryGroup\n    // array — we don't want to filter the products further — then run updateDisplay().\n    if (searchTerm.value.trim() === '') {\n      finalGroup = categoryGroup;\n      updateDisplay();\n    } else {\n      // Make sure the search term is converted to lower case before comparison. We've kept the\n      // product names all lower case to keep things simple\n      var lowerCaseSearchTerm = searchTerm.value.trim().toLowerCase();\n      // For each product in categoryGroup, see if the search term is contained inside the product name\n      // (if the indexOf() result doesn't return -1, it means it is) — if it is, then push the product\n      // onto the finalGroup array\n      for (var i = 0; i < categoryGroup.length; i++) {\n        if (categoryGroup[i].name.indexOf(lowerCaseSearchTerm) !== -1) {\n          finalGroup.push(categoryGroup[i]);\n        }\n      }\n\n      // run updateDisplay() after this second round of filtering has been done\n      updateDisplay();\n    }\n\n  }\n\n  // start the process of updating the display with the new set of products\n  function updateDisplay() {\n    // remove the previous contents of the <main> element\n    while (main.firstChild) {\n      main.removeChild(main.firstChild);\n    }\n\n    // if no products match the search term, display a \"No results to display\" message\n    if (finalGroup.length === 0) {\n      var para = document.createElement('p');\n      para.textContent = 'No results to display!';\n      main.appendChild(para);\n      // for each product we want to display, pass its product object to fetchBlob()\n    } else {\n      for (var i = 0; i < finalGroup.length; i++) {\n        fetchBlob(finalGroup[i]);\n      }\n    }\n  }\n\n  // fetchBlob uses fetch to retrieve the image for that product, and then sends the\n  // resulting image display URL and product object on to showProduct() to finally\n  // display it\n  function fetchBlob(product) {\n    // construct the URL path to the image file from the product.image property\n    var url = 'images/' + product.image;\n    console.log(url);\n    // Use fetch to fetch the image, and convert the resulting response to a blob\n    // Again, if any errors occur we report them in the console.\n    fetch(url).then(function (response) {\n      if (response.ok) {\n        response.blob().then(function (blob) {\n          // Convert the blob to an object URL — this is basically an temporary internal URL\n          // that points to an object stored inside the browser\n          var objectURL = URL.createObjectURL(blob);\n          console.log(objectURL);\n          // invoke showProduct\n          showProduct(objectURL, product);\n        });\n      } else {\n        console.log('Network request for \"' + product.name + '\" image failed with response ' + response.status + ': ' + response.statusText);\n      }\n    });\n  }\n\n  // Display a product inside the <main> element\n  function showProduct(objectURL, product) {\n    // create <section>, <h2>, <p>, and <img> elements\n    var section = document.createElement('section');\n    var heading = document.createElement('h2');\n    var para = document.createElement('p');\n    var image = document.createElement('img');\n\n    // give the <section> a classname equal to the product \"type\" property so it will display the correct icon\n    section.setAttribute('class', product.type);\n\n    // Give the <h2> textContent equal to the product \"name\" property, but with the first character\n    // replaced with the uppercase version of the first character\n    heading.textContent = product.name.replace(product.name.charAt(0), product.name.charAt(0).toUpperCase());\n\n    // Give the <p> textContent equal to the product \"price\" property, with a $ sign in front\n    // toFixed(2) is used to fix the price at 2 decimal places, so for example 1.40 is displayed\n    // as 1.40, not 1.4.\n    para.textContent = '$' + product.price.toFixed(2);\n\n    // Set the src of the <img> element to the ObjectURL, and the alt to the product \"name\" property\n    image.src = objectURL;\n\n    image.alt = product.name;\n    try {\n\n      image.onload = function () {\n        window.URL.revokeObjectURL(image.src);\n        console.log(\"revoke\");\n      }\n    }\n    catch (e) {\n      console.log(\"ERROR\", e);\n    }\n    // append the elements to the DOM as appropriate, to add the product to the UI\n    main.appendChild(section);\n\n    section.appendChild(heading);\n    section.appendChild(para);\n    section.appendChild(image);\n    console.log(\"has load here\")\n\n\n  }\n}\n"]}